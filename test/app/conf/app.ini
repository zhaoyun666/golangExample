
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 开发模式                                           ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[dev]
; DEBUG模式
app.debug = true
; 项目名称
app.name = ATC-ram

; 错误码配置文件
error.file = ./conf/error.ini
; HTTP/Websocket
; 是否支持HTTP/Websocket通信
;   - true : 支持
;   - false: 不支持
http.support = true
; HTTP服务地址
;   - e.g. "","127.0.0.1","localhost"
http.addr = 127.0.0.1
; HTTP服务端口
;   - e.g. 80
http.port = 8080
; HTTP退出最多等待时间
;   - 单位:s
http.qtimeout = 30
; 请求超时时间
;   - 单位:s
http.readtimeout = 0
; 响应超时时间
;   - 单位:s
http.writetimeout = 0
; POST上传文件最大内存
; 默认值:1 << 26 64M
post.maxmemory = 67108864

; 支持访问域
;   - * 表示允许访问所有域
front.host = *

; Thrift-RPC
; thrift允许定义一个简单的定义文件中的数据类型和服务接口，
; 以作为输入文件，编译器生成代码用来方便地生成RPC客户端和服务器通信的无缝跨编程语言。
;
; Thrift-RPC通信开关
;   - true : 支持
;   - false: 不支持
thrift.support = true
; Thrift-DEBUG调试
;   - true : 打开,打开DEBUG模式后会输出ATC_logs为前缀的通信日志,方便调试时排查问题
;   - false: 关闭
thrift.debug = true
; Thrift服务地址
;   - e.g. "","127.0.0.1","localhost"
thrift.addr = 127.0.0.1
; Thrift服务端口
;   - e.g. 9090
thrift.port = 10011
thirft.secure = false
; Thrift传输格式(通信层)
;   - binary : 二进制编码格式进行数据传输
;   - bompact : 高效率的、密集的二进制编码格式进行数据传输(压缩)
;   - json : 使用JSON的数据编码协议进行数据传输
;   - [暂不支持]simplejson : 只提供JSON只写的协议,适用于通过脚本语言解析
thrift.protocol = binary
; Thrift数据传输方式(传输层)
;   - framed : 使用非阻塞式方式,按块的大小进行传输
;               以帧为传输单位，帧结构为：4个字节（int32_t）+传输字节串，头4个字节是存储后面字节串的长度，该字节串才是正确需要传输的数据
;   - [暂不支持]memorybuffer : 将内存用于I/O
;   - buffered : 对某个transport对象操作的数据进行buffer,即从buffer中读取数据进行传输,或将数据直接写入到buffer
thrift.transport = framed
; thriftRPC 退出最多等待时间
;   - 单位:s
thrift.qtimeout = 500
; Thrift客户端请求超时时间
;   - 单位:s, 0表示不限制
thrift.client.timeout = 10

; Log
;
;
log.support = true
; Log级别
;   LevelTrace = iota
;   LevelInfo
;   LevelNotice
;   LevelWarn
;   LevelError
;   LevelFatal
;   LevelDebug
log.level = 0
; Log输出
;   stdout : 控制台输出
;   file : 文件输出
log.output = stdout
; Log指定日志路径文件
;   写入file文件方式时需要填写该项
;   指定一个日志写入文件路径
log.file = ./log/test.log
; Log文件的模式和权限位
log.perm = 0660
; 数据库
; 是否支持ORM数据库引擎
;   - true : 支持
;   - false: 不支持
orm.support = true
; ORM日志级别
;   LOG_UNKNOWN
;   LOG_OFF
;   LOG_WARNING
;   LOG_INFO
;   LOG_DEBUG
orm.log.level = LOG_DEBUG
; 连接池的空闲数大小
orm.maxidleconns =
; 最大打开的连接数
orm.maxopenconns =
; 定时监测数据库连接是否鲜活
;   单位: 秒
;   注意: 某些数据库有连接超时设置的，可以通过起一个定期Ping的Go程来保持连接鲜活。
;   默认值: 30
orm.pingtime = 180
; 数据库名
;   格式: 别名
;   e.g. test_w:写库,test_r:写库
orm.aliasnames = atc_ram
; 数据库配置
;   e.g. dbs.别名.类型 = 值
orm.atc_ram.driver = mysql
orm.atc_ram.host = 127.0.0.1:3306
orm.atc_ram.user = root
orm.atc_ram.password = 123456
orm.atc_ram.dbname = atc_ram
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
; 生产模式                                           ;
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
[prod]
